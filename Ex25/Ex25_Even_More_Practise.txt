### Exercise 25: Even More Practice

We're going to do some more practice involving functions and variables to make sure you know them well. This exercise
should be straightforward for you to type in, break down, and understand.

However, this exercise is a little different. You won't be running it. Instead you will import it into Python and run
the functions yourself.

#### Code ---->

------------------------------------------------------------------------------------------------------------------------

def break_words(stuff):
    """This function will break up words for us."""
    words = stuff.split(' ')
    return words

def sort_words(words):
    """Sorts the words."""
    return sorted(words)

def print_first_word(words):
    """Prints the first word after popping it off."""
    word = words.pop(0)
    print(word)

def print_last_word(words):
    """Prints the last word after popping it off."""
    word = words.pop(-1)
    print(word)

def sort_sentence(sentence):
    """Takes in a full sentence and returns the sorted words."""
    words = break_words(sentence)
    return sort_words(words)

def print_first_and_last(sentence):
    """Prints the first and last words of the sentence."""
    words = break_words(sentence)
    print_first_word(words)
    print_last_word(words)

def print_first_and_last_sorted(sentence):
    """Sorts the words then prints the first and last one."""
    words = sort_sentence(sentence)
    print_first_word(words)
    print_last_word(words)

------------------------------------------------------------------------------------------------------------------------

First, run this with python3.6 ex25.py to find any errors you have made. Once you have found all of the errors you can
and fixed them, you will then want to follow the What You Should See section to complete the exercise.

#### What You Should See ---->

In this exercise we're going to interact with your ex25.py file inside the python3.6 interpreter you used periodically
to do calculations. You run python3.6 from the terminal like this:

------------------------------------------------------------------------------------------------------------------------

$ python3.6
Python 3.6.0rc2 (v3.6.0rc2:800a67f7806d, Dec 16 2016, 14:12:21)
[GCC 4.2.1 (Apple Inc. build 5666) (dot 3)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>>

------------------------------------------------------------------------------------------------------------------------

Your output should look like mine, and after the > character (called the prompt) you can type Python code in, and it
will run immediately. Using this I want you to type each of these lines of Python code into python3.6 and see what it
does:

------------------------------------------------------------------------------------------------------------------------

import ex25
sentence = "All good things come to those who wait."
words = ex25.break_words(sentence)
words
sorted_words = ex25.sort_words(words)
sorted_words
ex25.print_first_word(words)
ex25.print_last_word(words)
words
ex25.print_first_word(sorted_words)
ex25.print_last_word(sorted_words)
sorted_words
sorted_words = ex25.sort_sentence(sentence)
sorted_words
ex25.print_first_and_last(sentence)
ex25.print_first_and_last_sorted(sentence)

------------------------------------------------------------------------------------------------------------------------

##### Here's what it looks like when I work with the ex25.py module in python3.6:

------------------------------------------------------------------------------------------------------------------------

Python 3.6.0rc2 (v3.6.0rc2:800a67f7806d, Dec 16 2016, 14:12:21)
[GCC 4.2.1 (Apple Inc. build 5666) (dot 3)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> import ex25
>>> sentence = "All good things come to those who wait."
>>> words = ex25.break_words(sentence)
>>> words
['All', 'good', 'things', 'come', 'to', 'those', 'who', 'wait.']
>>> sorted_words = ex25.sort_words(words)
>>> sorted_words
['All', 'come', 'good', 'things', 'those', 'to', 'wait.', 'who']
>>> ex25.print_first_word(words)
All
>>> ex25.print_last_word(words)
wait.
>>> words
['good', 'things', 'come', 'to', 'those', 'who']
>>> ex25.print_first_word(sorted_words)
All
>>> ex25.print_last_word(sorted_words)
who
>>> sorted_words
['come', 'good', 'things', 'those', 'to', 'wait.']
>>> sorted_words = ex25.sort_sentence(sentence)
>>> sorted_words
['All', 'come', 'good', 'things', 'those', 'to', 'wait.', 'who']
>>> ex25.print_first_and_last(sentence)
All
wait.
>>> ex25.print_first_and_last_sorted(sentence)
All
who

------------------------------------------------------------------------------------------------------------------------

As you go through each of these lines, make sure you can find the function that's being run in ex25.py and you
understand how each one works. If you get different results or error, you'll have to go fix your code, exit python3.6,
and start over.

#### Study Drills

1. Take the remaining lines of the What You Should See output and figure out what they are doing. Make sure you
understand how you are running your functions in the ex25 module.
>> We are using the functions from our ex25 module we created to do things that is predefined in our module

2. Try doing this: help(ex25) and also help(ex25.break_words). Notice how you get help for your module and how the help
is those odd """ strings you put after each function in ex25? Those special strings are called documentation comments,
and we'll be seeing more of them.
>>
  Help on module ex25:

NAME
    ex25 - # Exercise 25: Even More Practise

FUNCTIONS
    break_words(stuff)
        This function will break up words for us.

    print_first_and_last(sentence)
        Prints the first and last words of a sentence

    print_first_and_last_sorted(sentence)

    print_first_word(words)
-- More  --


3. Typing ex25. is annoying. A shortcut is to do your import like this: from ex25 import * which is like saying,
"Import everything from ex25." Programmers like saying things backward. Start a new session and see how all your
functions are right there.

>> Done

4. Try breaking your file and see what it looks like in python when you use it. You will have to quit python with quit()
to be able to reload it.