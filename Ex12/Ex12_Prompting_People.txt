Exercise 12: Prompting People

When you typed input() you were typing the ( and ) characters, which are parenthesis characters.
For input you can also put in a prompt to show to a person so he knows what to type.
Put a string that you want for the prompt inside the () so that it looks like this:

y = input("Name? ")
This prompts the user with "Name?" and puts the result into the variable y.
This is how you ask someone a question and get the answer.

This means we can completely rewrite our previous exercise using just input to do all the prompting.

Code ------->
-----------------------------------------------------------------------------------------------------------------------

age = input("How old are you? ")
height = input("How tall are you? ")
weight = input("How much do you weigh? ")

print(f"So, you're {age} old, {height} tall and {weight} heavy.")

-----------------------------------------------------------------------------------------------------------------------


What You Should See ------->
-----------------------------------------------------------------------------------------------------------------------
$ python3.6 ex12.py
How old are you?  38
How tall are you?  6'2"
How much do you weigh?  180lbs
So, you're 38 old, 6'2" tall and 180lbs heavy.

-----------------------------------------------------------------------------------------------------------------------


Study Drills
In Terminal, where you normally run python3.6 to run your scripts, type pydoc input. Read what it says.
If you're on Windows try python3.6 -m pydoc input instead.
>> input(prompt=None, /)
    Read a string from standard input.  The trailing newline is stripped.

    The prompt string, if given, is printed to standard output without a
    trailing newline before reading input.

    If the user hits EOF (*nix: Ctrl-D, Windows: Ctrl-Z+Return), raise EOFError.
    On *nix systems, readline is used if available.

Get out of pydoc by typing q to quit.
>> Done

Look online for what the pydoc command does.
>> The pydoc module automatically generates documentation from Python modules.

Use pydoc to also read about open, file, os, and sys.
It's alright if you do not understand those; just read through and take notes about interesting things.
>>